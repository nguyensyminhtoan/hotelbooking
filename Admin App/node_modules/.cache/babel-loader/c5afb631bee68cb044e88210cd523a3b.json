{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\NodeJS\\\\asm2\\\\Admin App\\\\src\\\\pages\\\\login\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Navbar from \"../../components/navbar/Navbar.jsx\";\nimport \"./login.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const handlePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  const handleLogin = e => {\n    e.preventDefault();\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    if (!emailRegex.test(email)) {\n      setErrorMessage(\"Vui lòng nhập định dạng email hợp lệ.\");\n      return;\n    }\n\n    if (password.length < 8) {\n      setErrorMessage(\"Mật khẩu phải chứa ít nhất 8 ký tự.\");\n      return;\n    }\n\n    const fetchLogin = async () => {\n      const request = await fetch('http://localhost:5000/login', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      });\n      const data = await request.json();\n\n      if (request.ok) {\n        localStorage.setItem('userInfo', JSON.stringify(data));\n        navigate('/dashboard');\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        onChange: handleEmail,\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: handlePassword,\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Login, \"86hP4a7h3GIuuj5GT0AxsZGO2Ys=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/Học Tập/NodeJS/asm2/Admin App/src/pages/login/login.js"],"names":["React","Navbar","useNavigate","useState","Login","email","setEmail","password","setPassword","errorMessage","setErrorMessage","navigate","handleEmail","e","target","value","handlePassword","handleLogin","preventDefault","emailRegex","test","length","fetchLogin","request","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","color"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport Navbar from \"../../components/navbar/Navbar.jsx\"\r\nimport \"./login.css\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useState } from \"react\"\r\nconst Login = () =>\r\n{\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const navigate = useNavigate()\r\n  const handleEmail = (e) => { setEmail(e.target.value) }\r\n  const handlePassword = (e) => { setPassword(e.target.value) }\r\n  const handleLogin = (e) =>\r\n  {\r\n    e.preventDefault()\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email))\r\n    {\r\n      setErrorMessage(\"Vui lòng nhập định dạng email hợp lệ.\");\r\n      return;\r\n    }\r\n    if (password.length < 8)\r\n    {\r\n      setErrorMessage(\"Mật khẩu phải chứa ít nhất 8 ký tự.\");\r\n      return;\r\n    }\r\n    const fetchLogin = async () =>\r\n    {\r\n      const request = await fetch('http://localhost:5000/login', {\r\n        method: \"POST\",\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email: email, password: password })\r\n      })\r\n      const data = await request.json()\r\n      if (request.ok)\r\n      {\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n        navigate('/dashboard')\r\n      }\r\n    }\r\n  }\r\n  return <div>\r\n    <Navbar />\r\n    <form className=\"form-login\">\r\n      <h1><b>Login</b></h1>\r\n      <input type=\"email\" placeholder=\"Email\" onChange={handleEmail} value={email}></input>\r\n      <input type=\"password\" placeholder=\"Password\" onChange={handlePassword} value={password}></input>\r\n      <button onClick={handleLogin}>Login</button>\r\n      {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>}\r\n    </form>\r\n\r\n  </div>\r\n}\r\nexport default Login"]},"metadata":{},"sourceType":"module"}