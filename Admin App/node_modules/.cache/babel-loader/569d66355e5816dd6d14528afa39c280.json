{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\NodeJS\\\\asm2\\\\Admin App\\\\src\\\\pages\\\\admin dashboard\\\\transaction.js\",\n    _s = $RefreshSig$();\n\nimport Sidebar from \"./sidebar\";\nimport styles from \"./transaction.module.css\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transaction = () => {\n  _s();\n\n  const [selectAll, setSelectAll] = useState(false);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [dataTransaction, setDataTransaction] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 8;\n  useEffect(() => {\n    const fetchData = async () => {\n      const requestTransaction = await fetch('http://localhost:5000/dashboard');\n      const dataTransaction = await requestTransaction.json();\n\n      if (requestTransaction.ok) {\n        setDataTransaction(dataTransaction);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleSelectAll = () => {\n    setSelectAll(!selectAll);\n\n    if (!selectAll) {\n      const allIds = dataTransaction.map((transaction, index) => index);\n      setSelectedRows(allIds);\n    } else {\n      setSelectedRows([]);\n    }\n  };\n\n  const handleSelectRow = id => {\n    if (selectedRows.includes(id)) {\n      setSelectedRows(selectedRows.filter(rowId => rowId !== id));\n    } else {\n      setSelectedRows([...selectedRows, id]);\n    }\n  }; // Tính tổng số trang\n\n\n  const totalPages = Math.ceil(dataTransaction.length / itemsPerPage); // Lấy chỉ mục bắt đầu và chỉ mục kết thúc của dữ liệu trên trang hiện tại\n\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = currentPage * itemsPerPage; // Dữ liệu trên trang hiện tại\n\n  const currentTransactions = dataTransaction.slice(startIndex, endIndex);\n\n  const changePage = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.transaction,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['transaction-content'],\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Transaction List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['transaction-table'],\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: selectAll,\n                  onChange: handleSelectAll\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Hotel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Room\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Payment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [dataTransaction.map((transaction, index) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: selectedRows.includes(index),\n                    onChange: () => handleSelectRow(index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: transaction.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: transaction.user\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: transaction.hotel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: transaction.room.join(', ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: transaction.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"$\", transaction.price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: transaction.payment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: transaction.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 17\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 22\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pagination,\n        children: Array.from({\n          length: totalPages\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: currentPage === index + 1 ? styles.active : '',\n          onClick: () => changePage(index + 1),\n          children: index + 1\n        }, index + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Transaction, \"PZjqNGxoH7S5+1CEUP/raqqkrG4=\");\n\n_c = Transaction;\nexport default Transaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transaction\");","map":{"version":3,"sources":["E:/Học Tập/NodeJS/asm2/Admin App/src/pages/admin dashboard/transaction.js"],"names":["Sidebar","styles","useState","useEffect","Transaction","selectAll","setSelectAll","selectedRows","setSelectedRows","dataTransaction","setDataTransaction","currentPage","setCurrentPage","itemsPerPage","fetchData","requestTransaction","fetch","json","ok","handleSelectAll","allIds","map","transaction","index","handleSelectRow","id","includes","filter","rowId","totalPages","Math","ceil","length","startIndex","endIndex","currentTransactions","slice","changePage","pageNumber","user","hotel","room","join","date","price","payment","status","pagination","Array","from","_","active"],"mappings":"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","sourcesContent":["import Sidebar from \"./sidebar\"\r\nimport styles from \"./transaction.module.css\"\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nconst Transaction = () =>\r\n{\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [dataTransaction, setDataTransaction] = useState([])\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 8;\r\n  useEffect(() =>\r\n  {\r\n    const fetchData = async () =>\r\n    {\r\n      const requestTransaction = await fetch('http://localhost:5000/dashboard')\r\n      const dataTransaction = await requestTransaction.json()\r\n\r\n\r\n      if (requestTransaction.ok)\r\n      {\r\n        setDataTransaction(dataTransaction);\r\n      }\r\n\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n\r\n  const handleSelectAll = () =>\r\n  {\r\n    setSelectAll(!selectAll);\r\n    if (!selectAll)\r\n    {\r\n      const allIds = dataTransaction.map((transaction, index) => index);\r\n      setSelectedRows(allIds);\r\n    } else\r\n    {\r\n      setSelectedRows([]);\r\n    }\r\n  };\r\n  const handleSelectRow = (id) =>\r\n  {\r\n    if (selectedRows.includes(id))\r\n    {\r\n      setSelectedRows(selectedRows.filter(rowId => rowId !== id));\r\n    } else\r\n    {\r\n      setSelectedRows([...selectedRows, id]);\r\n    }\r\n  };\r\n\r\n  // Tính tổng số trang\r\n  const totalPages = Math.ceil(dataTransaction.length / itemsPerPage);\r\n  // Lấy chỉ mục bắt đầu và chỉ mục kết thúc của dữ liệu trên trang hiện tại\r\n  const startIndex = (currentPage - 1) * itemsPerPage;\r\n  const endIndex = currentPage * itemsPerPage;\r\n  // Dữ liệu trên trang hiện tại\r\n  const currentTransactions = dataTransaction.slice(startIndex, endIndex);\r\n  const changePage = (pageNumber) =>\r\n  {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n  return <div className={styles.transaction}>\r\n    <Sidebar />\r\n    <div className={styles['transaction-content']}>\r\n      <p>Transaction List</p>\r\n      <div className={styles['transaction-table']}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selectAll}\r\n                  onChange={handleSelectAll}\r\n                />\r\n              </th>\r\n              <th>ID</th>\r\n              <th>User</th>\r\n              <th>Hotel</th>\r\n              <th>Room</th>\r\n              <th>Date</th>\r\n              <th>Price</th>\r\n              <th>Payment</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {dataTransaction.map((transaction, index) =>\r\n            {\r\n              return <tr key={index}>\r\n                <td>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedRows.includes(index)}\r\n                    onChange={() => handleSelectRow(index)}\r\n                  />\r\n                </td>\r\n                <td>{transaction.id}</td>\r\n                <td>{transaction.user}</td>\r\n                <td>{transaction.hotel}</td>\r\n                <td>{transaction.room.join(', ')}</td>\r\n                <td>{transaction.date}</td>\r\n                <td>${transaction.price}</td>\r\n                <td>{transaction.payment}</td>\r\n                <td><p>{transaction.status}</p></td>\r\n              </tr>\r\n            })}\r\n\r\n            <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className={styles.pagination}>\r\n        {Array.from({ length: totalPages }, (_, index) => (\r\n          <button\r\n            key={index + 1}\r\n            className={currentPage === index + 1 ? styles.active : ''}\r\n            onClick={() => changePage(index + 1)}\r\n          >\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n}\r\nexport default Transaction"]},"metadata":{},"sourceType":"module"}