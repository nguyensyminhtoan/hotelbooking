{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\NodeJS\\\\asm2\\\\Admin App\\\\src\\\\pages\\\\admin dashboard\\\\rooms.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./rooms.module.css\";\nimport Sidebar from \"./sidebar\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rooms = () => {\n  _s();\n\n  const [selectAll, setSelectAll] = useState(false);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [dataRooms, setDataRooms] = useState([]);\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      const request = await fetch('http://localhost:5000/rooms');\n      const data = await request.json();\n\n      if (request.ok) {\n        setDataRooms(data);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleSelectAll = () => {\n    setSelectAll(!selectAll);\n\n    if (!selectAll) {\n      const allIds = dataRooms.map((rooms, index) => index);\n      setSelectedRows(allIds);\n    } else {\n      setSelectedRows([]);\n    }\n  };\n\n  const handleSelectRow = id => {\n    if (selectedRows.includes(id)) {\n      setSelectedRows(selectedRows.filter(rowId => rowId !== id));\n    } else {\n      setSelectedRows([...selectedRows, id]);\n    }\n  };\n\n  const handleDelete = id => {\n    // Hiển thị hộp thoại xác nhận\n    const isConfirmed = window.confirm('Are you sure you want to delete this rooms?'); // Nếu người dùng đồng ý xóa\n\n    if (isConfirmed) {\n      const sendRequest = async () => {\n        try {\n          const request = await fetch('http://localhost:5000/delete-rooms', {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              id: id\n            })\n          });\n          const response = await request.json();\n          setMessage(response.message);\n\n          if (request.ok) {\n            // Sau khi xóa thành công, cập nhật lại danh sách phòng\n            const updatedRooms = dataRooms.filter(room => room._id !== id);\n            setDataRooms(updatedRooms);\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      };\n\n      sendRequest();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.rooms,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['rooms-content'],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['add-new'],\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Rooms List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            navigate('/dashboard/new-room');\n          },\n          children: \"Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['rooms-table'],\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: selectAll,\n                  onChange: handleSelectAll\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Max People\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [dataRooms.map((room, index) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: selectedRows.includes(index),\n                    onChange: () => handleSelectRow(index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: room._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: room.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: room.desc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: room.price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: room.maxPeople\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    onClick: () => handleDelete(hotel._id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 22\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/dashboard/new-hotel?hotelId=${hotel._id}`,\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 75\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 17\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 22\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), message ? /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: \"red\"\n          },\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 20\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Rooms, \"PTtfFK+1Shgq0NqvPIw94t6FR4Y=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Rooms;\nexport default Rooms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rooms\");","map":{"version":3,"sources":["E:/Học Tập/NodeJS/asm2/Admin App/src/pages/admin dashboard/rooms.js"],"names":["styles","Sidebar","useState","useEffect","useNavigate","Rooms","selectAll","setSelectAll","selectedRows","setSelectedRows","dataRooms","setDataRooms","message","setMessage","navigate","fetchData","request","fetch","data","json","ok","handleSelectAll","allIds","map","rooms","index","handleSelectRow","id","includes","filter","rowId","handleDelete","isConfirmed","window","confirm","sendRequest","method","headers","body","JSON","stringify","response","updatedRooms","room","_id","error","console","title","desc","price","maxPeople","hotel","color"],"mappings":"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","sourcesContent":["import styles from \"./rooms.module.css\"\r\nimport Sidebar from \"./sidebar\"\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom'\r\nconst Rooms = () =>\r\n{\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [dataRooms, setDataRooms] = useState([])\r\n  const [message, setMessage] = useState('')\r\n  const navigate = useNavigate()\r\n  useEffect(() =>\r\n  {\r\n    const fetchData = async () =>\r\n    {\r\n      const request = await fetch('http://localhost:5000/rooms')\r\n      const data = await request.json()\r\n\r\n      if (request.ok)\r\n      {\r\n        setDataRooms(data)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n\r\n  const handleSelectAll = () =>\r\n  {\r\n    setSelectAll(!selectAll);\r\n    if (!selectAll)\r\n    {\r\n      const allIds = dataRooms.map((rooms, index) => index);\r\n      setSelectedRows(allIds);\r\n    } else\r\n    {\r\n      setSelectedRows([]);\r\n    }\r\n  };\r\n  const handleSelectRow = (id) =>\r\n  {\r\n    if (selectedRows.includes(id))\r\n    {\r\n      setSelectedRows(selectedRows.filter(rowId => rowId !== id));\r\n    } else\r\n    {\r\n      setSelectedRows([...selectedRows, id]);\r\n    }\r\n  };\r\n  const handleDelete = (id) =>\r\n  {\r\n    // Hiển thị hộp thoại xác nhận\r\n    const isConfirmed = window.confirm('Are you sure you want to delete this rooms?');\r\n\r\n    // Nếu người dùng đồng ý xóa\r\n    if (isConfirmed)\r\n    {\r\n      const sendRequest = async () =>\r\n      {\r\n        try\r\n        {\r\n          const request = await fetch('http://localhost:5000/delete-rooms', {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ id: id })\r\n          });\r\n          const response = await request.json();\r\n          setMessage(response.message);\r\n          if (request.ok)\r\n          {\r\n            // Sau khi xóa thành công, cập nhật lại danh sách phòng\r\n            const updatedRooms = dataRooms.filter(room => room._id !== id);\r\n            setDataRooms(updatedRooms);\r\n          }\r\n        } catch (error)\r\n        {\r\n          console.error(error);\r\n        }\r\n      };\r\n\r\n      sendRequest();\r\n    }\r\n  }\r\n  return <div className={styles.rooms}>\r\n    <Sidebar />\r\n    <div className={styles['rooms-content']}>\r\n      <div className={styles['add-new']}>\r\n        <p>Rooms List</p>\r\n        <button onClick={() => { navigate('/dashboard/new-room') }}>Add New</button>\r\n      </div>\r\n\r\n      <div className={styles['rooms-table']}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selectAll}\r\n                  onChange={handleSelectAll}\r\n                />\r\n              </th>\r\n              <th>ID</th>\r\n              <th>Title</th>\r\n              <th>Description</th>\r\n              <th>Price</th>\r\n              <th>Max People</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {dataRooms.map((room, index) =>\r\n            {\r\n              return <tr key={index}>\r\n                <td>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedRows.includes(index)}\r\n                    onChange={() => handleSelectRow(index)}\r\n                  />\r\n                </td>\r\n                <td>{room._id}</td>\r\n                <td>{room.title}</td>\r\n                <td>{room.desc}</td>\r\n                <td>{room.price}</td>\r\n                <td>{room.maxPeople}</td>\r\n                <td ><p onClick={() => handleDelete(hotel._id)}>Delete</p><Link to={`/dashboard/new-hotel?hotelId=${hotel._id}`}>Edit</Link></td>\r\n              </tr>\r\n            })}\r\n\r\n            <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        {message ? <h3 style={{ color: \"red\" }}>{message}</h3> : \"\"}\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n}\r\nexport default Rooms"]},"metadata":{},"sourceType":"module"}