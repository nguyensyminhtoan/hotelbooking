{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\NodeJS\\\\asm2\\\\Admin App\\\\src\\\\pages\\\\admin dashboard\\\\new-hotel.js\",\n    _s = $RefreshSig$();\n\nimport Sidebar from \"./sidebar\";\nimport './new-hotel.css';\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewHotel = () => {\n  _s();\n\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [distance, setDistance] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [images, setImages] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [featured, setFeatured] = useState(false);\n  const [formMessage, setFormMessage] = useState(\"\");\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const hotelId = searchParams.get('hotelId');\n  const rooms = ['2 Bed Room', '1 Bed Room', 'Budget Twin Room', \"Premier City View Room\", \"Superior basement room\", \"Basement Double Room\", \"Budget Double Room\", \"Deluxe Room\", \"Deluxe Window\"];\n  useEffect(() => {\n    if (hotelId) {\n      const fetchHotel = async () => {\n        const request = await fetch(`http://localhost:5000/hotel-detail?hotelID=${hotelId}`);\n        const dataHotel = await request.json();\n\n        if (request.ok) {\n          setImages(dataHotel.photos[0]);\n          setName(dataHotel.name);\n          setCity(dataHotel.city);\n          setDistance(dataHotel.distance);\n          setDescription(dataHotel.desc);\n          setType(dataHotel.type);\n          setAddress(dataHotel.address);\n          setTitle(dataHotel.title);\n          setPrice(dataHotel.cheapestPrice);\n          setFeatured(dataHotel.featured);\n        }\n      };\n    }\n\n    fetchHotel();\n  }, [hotelId]);\n\n  const handleRoomSelect = selectedRoom => {\n    if (selectedRooms.includes(selectedRoom)) {\n      setSelectedRooms(selectedRooms.filter(room => room !== selectedRoom));\n    } else {\n      setSelectedRooms([...selectedRooms, selectedRoom]);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Kiểm tra xem các trường đã được điền đầy đủ hay không\n\n    if (!name || !city || !distance || !description || !images || !type || !address || !title || !price) {\n      setFormMessage(\"Please fill in all fields.\");\n      return;\n    }\n\n    setFormMessage(\"\");\n\n    if (hotelId) {\n      const sendRequest = async () => {\n        const request = await fetch(`http://localhost:5000/edit-hotel?hotelId=${hotelId}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: name,\n            city: city,\n            distance: distance,\n            description: description,\n            imageUrl: images,\n            type: type,\n            address: address,\n            title: title,\n            price: price,\n            featured: featured,\n            roomTitle: selectedRooms\n          })\n        });\n        const res = await request.json();\n\n        if (request.ok) {\n          setFormMessage(res.message);\n        } else {\n          setFormMessage(res.error);\n        }\n      };\n\n      sendRequest();\n      return;\n    }\n\n    const sendRequest = async () => {\n      const request = await fetch('http://localhost:5000/add-hotel', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: name,\n          city: city,\n          distance: distance,\n          description: description,\n          imageUrl: images,\n          type: type,\n          address: address,\n          title: title,\n          price: price,\n          featured: featured,\n          roomTitle: selectedRooms\n        })\n      });\n      const res = await request.json();\n\n      if (request.ok) {\n        setFormMessage(res.message);\n      } else {\n        setFormMessage(res.error);\n      }\n    };\n\n    sendRequest();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-hotel\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-hotel_content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: hotelId ? 'Edit Hotel' : 'Add New Hotel'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"new-hotel_form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"My Hotel\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"New York\",\n              value: city,\n              onChange: e => setCity(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Distance form City Center\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"Number\",\n              placeholder: \"500\",\n              value: distance,\n              onChange: e => setDistance(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"description\",\n              value: description,\n              onChange: e => setDescription(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: images,\n              onChange: e => setImages(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"hotel\",\n              value: type,\n              onChange: e => setType(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"elton st. 216\",\n              value: address,\n              onChange: e => setAddress(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"The best Hotel\",\n              value: title,\n              onChange: e => setTitle(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"100\",\n              value: price,\n              onChange: e => setPrice(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Featured\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: featured,\n              onChange: e => setFeatured(e.target.value === \"false\" ? false : true),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"false\",\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"true\",\n                children: \"Yes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"rooms-list\",\n          children: rooms.map((room, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: selectedRooms.includes(room) ? 'active' : \"\",\n            onClick: () => {\n              handleRoomSelect(room);\n            },\n            children: room\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }, this), formMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"form-error\",\n          children: formMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 10\n  }, this);\n};\n\n_s(NewHotel, \"pIzWCok8wE3DrLBzoiJzf/V2i/4=\", false, function () {\n  return [useLocation];\n});\n\n_c = NewHotel;\nexport default NewHotel;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewHotel\");","map":{"version":3,"sources":["E:/Học Tập/NodeJS/asm2/Admin App/src/pages/admin dashboard/new-hotel.js"],"names":["Sidebar","useEffect","useState","useLocation","NewHotel","selectedRooms","setSelectedRooms","name","setName","city","setCity","distance","setDistance","description","setDescription","images","setImages","type","setType","address","setAddress","title","setTitle","price","setPrice","featured","setFeatured","formMessage","setFormMessage","location","searchParams","URLSearchParams","search","hotelId","get","rooms","fetchHotel","request","fetch","dataHotel","json","ok","photos","desc","cheapestPrice","handleRoomSelect","selectedRoom","includes","filter","room","handleSubmit","e","preventDefault","sendRequest","method","headers","body","JSON","stringify","imageUrl","roomTitle","res","message","error","target","value","map","index"],"mappings":"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","sourcesContent":["import Sidebar from \"./sidebar\"\r\nimport './new-hotel.css'\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nconst NewHotel = () =>\r\n{\r\n  const [selectedRooms, setSelectedRooms] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [distance, setDistance] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [images, setImages] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [featured, setFeatured] = useState(false);\r\n  const [formMessage, setFormMessage] = useState(\"\");\r\n\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const hotelId = searchParams.get('hotelId');\r\n\r\n  const rooms = ['2 Bed Room', '1 Bed Room', 'Budget Twin Room', \"Premier City View Room\", \"Superior basement room\", \"Basement Double Room\", \"Budget Double Room\", \"Deluxe Room\", \"Deluxe Window\"]\r\n  useEffect(() =>\r\n  {\r\n    if (hotelId)\r\n    {\r\n      const fetchHotel = async () =>\r\n      {\r\n        const request = await fetch(`http://localhost:5000/hotel-detail?hotelID=${hotelId}`)\r\n        const dataHotel = await request.json()\r\n        if (request.ok)\r\n        {\r\n          setImages(dataHotel.photos[0])\r\n          setName(dataHotel.name)\r\n          setCity(dataHotel.city)\r\n          setDistance(dataHotel.distance)\r\n          setDescription(dataHotel.desc)\r\n          setType(dataHotel.type)\r\n          setAddress(dataHotel.address)\r\n          setTitle(dataHotel.title)\r\n          setPrice(dataHotel.cheapestPrice)\r\n          setFeatured(dataHotel.featured)\r\n        }\r\n      }\r\n    }\r\n    fetchHotel()\r\n  }, [hotelId])\r\n\r\n\r\n  const handleRoomSelect = (selectedRoom) =>\r\n  {\r\n    if (selectedRooms.includes(selectedRoom))\r\n    {\r\n      setSelectedRooms(selectedRooms.filter(room => room !== selectedRoom));\r\n    } else\r\n    {\r\n      setSelectedRooms([...selectedRooms, selectedRoom]);\r\n    }\r\n  };\r\n  const handleSubmit = (e) =>\r\n  {\r\n    e.preventDefault();\r\n\r\n    // Kiểm tra xem các trường đã được điền đầy đủ hay không\r\n    if (!name || !city || !distance || !description || !images || !type || !address || !title || !price)\r\n    {\r\n      setFormMessage(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n    setFormMessage(\"\");\r\n    if (hotelId)\r\n    {\r\n      const sendRequest = async () =>\r\n      {\r\n        const request = await fetch(`http://localhost:5000/edit-hotel?hotelId=${hotelId}`, {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            name: name,\r\n            city: city,\r\n            distance: distance,\r\n            description: description,\r\n            imageUrl: images,\r\n            type: type,\r\n            address: address,\r\n            title: title,\r\n            price: price,\r\n            featured: featured,\r\n            roomTitle: selectedRooms\r\n          })\r\n        })\r\n        const res = await request.json()\r\n\r\n        if (request.ok)\r\n        {\r\n          setFormMessage(res.message)\r\n        } else\r\n        {\r\n          setFormMessage(res.error)\r\n        }\r\n      }\r\n      sendRequest()\r\n      return\r\n    }\r\n    const sendRequest = async () =>\r\n    {\r\n      const request = await fetch('http://localhost:5000/add-hotel', {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          name: name,\r\n          city: city,\r\n          distance: distance,\r\n          description: description,\r\n          imageUrl: images,\r\n          type: type,\r\n          address: address,\r\n          title: title,\r\n          price: price,\r\n          featured: featured,\r\n          roomTitle: selectedRooms\r\n        })\r\n      })\r\n      const res = await request.json()\r\n\r\n      if (request.ok)\r\n      {\r\n        setFormMessage(res.message)\r\n      } else\r\n      {\r\n        setFormMessage(res.error)\r\n      }\r\n    }\r\n    sendRequest()\r\n\r\n\r\n  };\r\n  return <div className=\"new-hotel\">\r\n    <Sidebar></Sidebar>\r\n    <div className=\"new-hotel_content\">\r\n      <h2>{hotelId ? 'Edit Hotel' : 'Add New Hotel'}</h2>\r\n      <form className=\"new-hotel_form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-content\">\r\n          <div className=\"form-items\">\r\n            <label>Name</label>\r\n            <input type=\"text\" placeholder=\"My Hotel\" value={name} onChange={(e) => setName(e.target.value)} required></input>\r\n            <label>City</label>\r\n            <input type=\"text\" placeholder=\"New York\" value={city} onChange={(e) => setCity(e.target.value)} required></input>\r\n            <label>Distance form City Center</label>\r\n            <input type=\"Number\" placeholder=\"500\" value={distance} onChange={(e) => setDistance(e.target.value)} required></input>\r\n            <label>Description</label>\r\n            <input type=\"text\" placeholder=\"description\" value={description} onChange={(e) => setDescription(e.target.value)} required></input>\r\n            <label>Images</label>\r\n            <input type=\"text\" value={images} onChange={(e) => setImages(e.target.value)} required></input>\r\n          </div>\r\n          <div className=\"form-items\">\r\n            <label>Type</label>\r\n            <input type=\"text\" placeholder=\"hotel\" value={type} onChange={(e) => setType(e.target.value)} required></input>\r\n            <label>Address</label>\r\n            <input type=\"text\" placeholder=\"elton st. 216\" value={address} onChange={(e) => setAddress(e.target.value)} required></input>\r\n            <label>Title</label>\r\n            <input type=\"text\" placeholder=\"The best Hotel\" value={title} onChange={(e) => setTitle(e.target.value)} required></input>\r\n            <label>Price</label>\r\n            <input type=\"text\" placeholder=\"100\" value={price} onChange={(e) => setPrice(e.target.value)} required></input>\r\n            <label>Featured</label>\r\n            <select value={featured} onChange={(e) => setFeatured(e.target.value === \"false\" ? false : true)} required>\r\n              <option value=\"false\" >No</option>\r\n              <option value=\"true\">Yes</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <label>Rooms</label>\r\n\r\n        <ul className=\"rooms-list\">\r\n          {rooms.map((room, index) => (\r\n            <li\r\n              key={index}\r\n              className={selectedRooms.includes(room) ? 'active' : \"\"}\r\n              onClick={() =>\r\n              {\r\n                handleRoomSelect(room)\r\n\r\n              }\r\n              }>\r\n              {room}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <button type=\"submit\">Send</button>\r\n        {formMessage && <p className=\"form-error\">{formMessage}</p>}\r\n      </form>\r\n    </div>\r\n  </div >\r\n}\r\nexport default NewHotel"]},"metadata":{},"sourceType":"module"}