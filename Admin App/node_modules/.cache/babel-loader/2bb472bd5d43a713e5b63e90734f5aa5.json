{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\NodeJS\\\\asm2\\\\Admin App\\\\src\\\\pages\\\\admin dashboard\\\\new-room.js\",\n    _s = $RefreshSig$();\n\nimport Sidebar from \"./sidebar\";\nimport './new-room.css';\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Newroom = () => {\n  _s();\n\n  const [rooms, setRooms] = useState('');\n  const [description, setDescription] = useState(\"\");\n  const [maxPeople, setMaxPeople] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [hotel, setHotel] = useState(false);\n  const [formMessage, setFormMessage] = useState(\"\");\n  const [selectedHotel, setSelectedHotel] = useState('');\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const roomsId = searchParams.get('roomsId');\n  useEffect(() => {\n    const fetchHotel = async () => {\n      const request = await fetch('http://localhost:5000/hotel');\n      const hotel = await request.json();\n      setHotel(hotel.map(hotel => hotel.name));\n    };\n\n    const fetchRoomsDetail = async () => {\n      const request = await fetch(`http://localhost:5000/rooms-detail?roomsId=${roomsId}`);\n      const roomsDetail = await request.json();\n      setRooms(roomsDetail.roomNumbers);\n      setDescription(roomsDetail.desc);\n      setMaxPeople(roomsDetail.maxPeople);\n      setTitle(roomsDetail.title);\n      setPrice(roomsDetail.price);\n    };\n\n    if (roomsId) {\n      fetchRoomsDetail();\n    }\n\n    fetchHotel();\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const roomNumbers = rooms.split(\",\").map(room => room.trim()); // Kiểm tra xem các trường đã được điền đầy đủ hay không\n\n    if (!description || !maxPeople || !title || !price || !rooms) {\n      setFormMessage(\"Please fill in all fields.\");\n      return;\n    }\n\n    setFormMessage(\"\");\n\n    const sendRequest = async () => {\n      const request = await fetch('http://localhost:5000/add-room', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: title,\n          desc: description,\n          maxPeople: maxPeople,\n          price: price,\n          roomNumbers: roomNumbers,\n          hotel: selectedHotel\n        })\n      });\n      const res = await request.json();\n\n      if (request.ok) {\n        setFormMessage(res.message);\n      } else {\n        setFormMessage(res.error);\n      }\n    };\n\n    sendRequest();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-room\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-room_content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"new-room_form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"The best room\",\n              value: title,\n              onChange: e => setTitle(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"100\",\n              value: price,\n              onChange: e => setPrice(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"description\",\n              value: description,\n              onChange: e => setDescription(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Max People\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"Number\",\n              placeholder: \"2\",\n              value: maxPeople,\n              onChange: e => setMaxPeople(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rooms\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Rooms\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: rooms,\n              onChange: e => setRooms(e.target.value),\n              type: \"text\",\n              placeholder: \"give comma between room numbers.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Choose a hotel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedHotel,\n              onChange: e => setSelectedHotel(e.target.value),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Hotel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 15\n              }, this), hotel ? hotel.map((hotelName, index) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: hotelName,\n                  children: hotelName\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 24\n                }, this);\n              }) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), formMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"form-error\",\n          children: formMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Newroom, \"wlRH8rMuudiB3GEkfU6HclcHjtU=\", false, function () {\n  return [useLocation];\n});\n\n_c = Newroom;\nexport default Newroom;\n\nvar _c;\n\n$RefreshReg$(_c, \"Newroom\");","map":{"version":3,"sources":["E:/Học Tập/NodeJS/asm2/Admin App/src/pages/admin dashboard/new-room.js"],"names":["Sidebar","useEffect","useState","useLocation","Newroom","rooms","setRooms","description","setDescription","maxPeople","setMaxPeople","title","setTitle","price","setPrice","hotel","setHotel","formMessage","setFormMessage","selectedHotel","setSelectedHotel","location","searchParams","URLSearchParams","search","roomsId","get","fetchHotel","request","fetch","json","map","name","fetchRoomsDetail","roomsDetail","roomNumbers","desc","handleSubmit","e","preventDefault","split","room","trim","sendRequest","method","headers","body","JSON","stringify","res","ok","message","error","target","value","hotelName","index"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAO,gBAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AACA,MAAMC,OAAO,GAAG,MAChB;AAAA;;AACE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAMmB,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAMmB,YAAY,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAArB;AACA,QAAMC,OAAO,GAAGH,YAAY,CAACI,GAAb,CAAiB,SAAjB,CAAhB;AAEAzB,EAAAA,SAAS,CAAC,MACV;AACE,UAAM0B,UAAU,GAAG,YACnB;AACE,YAAMC,OAAO,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA3B;AACA,YAAMd,KAAK,GAAG,MAAMa,OAAO,CAACE,IAAR,EAApB;AACAd,MAAAA,QAAQ,CAACD,KAAK,CAACgB,GAAN,CAAUhB,KAAK,IAAIA,KAAK,CAACiB,IAAzB,CAAD,CAAR;AAED,KAND;;AAOA,UAAMC,gBAAgB,GAAG,YACzB;AACE,YAAML,OAAO,GAAG,MAAMC,KAAK,CAAE,8CAA6CJ,OAAQ,EAAvD,CAA3B;AACA,YAAMS,WAAW,GAAG,MAAMN,OAAO,CAACE,IAAR,EAA1B;AACAxB,MAAAA,QAAQ,CAAC4B,WAAW,CAACC,WAAb,CAAR;AACA3B,MAAAA,cAAc,CAAC0B,WAAW,CAACE,IAAb,CAAd;AACA1B,MAAAA,YAAY,CAACwB,WAAW,CAACzB,SAAb,CAAZ;AACAG,MAAAA,QAAQ,CAACsB,WAAW,CAACvB,KAAb,CAAR;AACAG,MAAAA,QAAQ,CAACoB,WAAW,CAACrB,KAAb,CAAR;AACD,KATD;;AAUA,QAAIY,OAAJ,EACA;AACEQ,MAAAA,gBAAgB;AACjB;;AAEDN,IAAAA,UAAU;AACX,GAzBQ,EAyBN,EAzBM,CAAT;;AA0BA,QAAMU,YAAY,GAAIC,CAAD,IACrB;AACEA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMJ,WAAW,GAAG9B,KAAK,CAACmC,KAAN,CAAY,GAAZ,EAAiBT,GAAjB,CAAqBU,IAAI,IAAIA,IAAI,CAACC,IAAL,EAA7B,CAApB,CAFF,CAGE;;AACA,QAAI,CAACnC,WAAD,IAAgB,CAACE,SAAjB,IAA8B,CAACE,KAA/B,IAAwC,CAACE,KAAzC,IAAkD,CAACR,KAAvD,EACA;AACEa,MAAAA,cAAc,CAAC,4BAAD,CAAd;AACA;AACD;;AAEDA,IAAAA,cAAc,CAAC,EAAD,CAAd;;AACA,UAAMyB,WAAW,GAAG,YACpB;AACE,YAAMf,OAAO,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AAC5De,QAAAA,MAAM,EAAE,MADoD;AAE5DC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFmD;AAG5DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBrC,UAAAA,KAAK,EAAEA,KADY;AAEnByB,UAAAA,IAAI,EAAE7B,WAFa;AAGnBE,UAAAA,SAAS,EAAEA,SAHQ;AAInBI,UAAAA,KAAK,EAAEA,KAJY;AAKnBsB,UAAAA,WAAW,EAAEA,WALM;AAMnBpB,UAAAA,KAAK,EAAEI;AANY,SAAf;AAHsD,OAAnC,CAA3B;AAaA,YAAM8B,GAAG,GAAG,MAAMrB,OAAO,CAACE,IAAR,EAAlB;;AAEA,UAAIF,OAAO,CAACsB,EAAZ,EACA;AACEhC,QAAAA,cAAc,CAAC+B,GAAG,CAACE,OAAL,CAAd;AACD,OAHD,MAIA;AACEjC,QAAAA,cAAc,CAAC+B,GAAG,CAACG,KAAL,CAAd;AACD;AACF,KAxBD;;AAyBAT,IAAAA,WAAW;AAGZ,GAxCD;;AAyCA,sBAAO;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACL,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADK,eAEL;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAgC,QAAA,QAAQ,EAAEN,YAA1C;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,WAAW,EAAC,eAA/B;AAA+C,cAAA,KAAK,EAAE1B,KAAtD;AAA6D,cAAA,QAAQ,EAAG2B,CAAD,IAAO1B,QAAQ,CAAC0B,CAAC,CAACe,MAAF,CAASC,KAAV,CAAtF;AAAwG,cAAA,QAAQ;AAAhH;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,WAAW,EAAC,KAA/B;AAAqC,cAAA,KAAK,EAAEzC,KAA5C;AAAmD,cAAA,QAAQ,EAAGyB,CAAD,IAAOxB,QAAQ,CAACwB,CAAC,CAACe,MAAF,CAASC,KAAV,CAA5E;AAA8F,cAAA,QAAQ;AAAtG;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,WAAW,EAAC,aAA/B;AAA6C,cAAA,KAAK,EAAE/C,WAApD;AAAiE,cAAA,QAAQ,EAAG+B,CAAD,IAAO9B,cAAc,CAAC8B,CAAC,CAACe,MAAF,CAASC,KAAV,CAAhG;AAAkH,cAAA,QAAQ;AAA1H;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,WAAW,EAAC,GAAjC;AAAqC,cAAA,KAAK,EAAE7C,SAA5C;AAAuD,cAAA,QAAQ,EAAG6B,CAAD,IAAO5B,YAAY,CAAC4B,CAAC,CAACe,MAAF,CAASC,KAAV,CAApF;AAAsG,cAAA,QAAQ;AAA9G;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAU,cAAA,KAAK,EAAEjD,KAAjB;AAAwB,cAAA,QAAQ,EAAGiC,CAAD,IAAOhC,QAAQ,CAACgC,CAAC,CAACe,MAAF,CAASC,KAAV,CAAjD;AAAmE,cAAA,IAAI,EAAC,MAAxE;AAA+E,cAAA,WAAW,EAAC;AAA3F;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAQ,cAAA,KAAK,EAAEnC,aAAf;AAA8B,cAAA,QAAQ,EAAGmB,CAAD,IAAOlB,gBAAgB,CAACkB,CAAC,CAACe,MAAF,CAASC,KAAV,CAA/D;AAAiF,cAAA,QAAQ,MAAzF;AAAA,sCACE;AAAQ,gBAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGvC,KAAK,GAAGA,KAAK,CAACgB,GAAN,CAAU,CAACwB,SAAD,EAAYC,KAAZ,KACnB;AACE,oCAAO;AAAoB,kBAAA,KAAK,EAAED,SAA3B;AAAA,4BAAuCA;AAAvC,mBAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,eAHQ,CAAH,GAGD,EALP;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAgBE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,EAiCGvC,WAAW,iBAAI;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA,oBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAjClB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAyCD,CA1HD;;GAAMb,O;UAUaD,W;;;KAVbC,O;AA2HN,eAAeA,OAAf","sourcesContent":["import Sidebar from \"./sidebar\"\r\nimport './new-room.css'\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from 'react-router-dom'\r\nconst Newroom = () =>\r\n{\r\n  const [rooms, setRooms] = useState('');\r\n  const [description, setDescription] = useState(\"\");\r\n  const [maxPeople, setMaxPeople] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [hotel, setHotel] = useState(false);\r\n  const [formMessage, setFormMessage] = useState(\"\");\r\n  const [selectedHotel, setSelectedHotel] = useState('')\r\n  const location = useLocation()\r\n  const searchParams = new URLSearchParams(location.search)\r\n  const roomsId = searchParams.get('roomsId')\r\n\r\n  useEffect(() =>\r\n  {\r\n    const fetchHotel = async () =>\r\n    {\r\n      const request = await fetch('http://localhost:5000/hotel')\r\n      const hotel = await request.json()\r\n      setHotel(hotel.map(hotel => hotel.name))\r\n\r\n    }\r\n    const fetchRoomsDetail = async () =>\r\n    {\r\n      const request = await fetch(`http://localhost:5000/rooms-detail?roomsId=${roomsId}`)\r\n      const roomsDetail = await request.json()\r\n      setRooms(roomsDetail.roomNumbers)\r\n      setDescription(roomsDetail.desc)\r\n      setMaxPeople(roomsDetail.maxPeople)\r\n      setTitle(roomsDetail.title)\r\n      setPrice(roomsDetail.price)\r\n    }\r\n    if (roomsId)\r\n    {\r\n      fetchRoomsDetail()\r\n    }\r\n\r\n    fetchHotel()\r\n  }, [])\r\n  const handleSubmit = (e) =>\r\n  {\r\n    e.preventDefault();\r\n    const roomNumbers = rooms.split(\",\").map(room => room.trim())\r\n    // Kiểm tra xem các trường đã được điền đầy đủ hay không\r\n    if (!description || !maxPeople || !title || !price || !rooms)\r\n    {\r\n      setFormMessage(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n\r\n    setFormMessage(\"\");\r\n    const sendRequest = async () =>\r\n    {\r\n      const request = await fetch('http://localhost:5000/add-room', {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          title: title,\r\n          desc: description,\r\n          maxPeople: maxPeople,\r\n          price: price,\r\n          roomNumbers: roomNumbers,\r\n          hotel: selectedHotel\r\n\r\n        })\r\n      })\r\n      const res = await request.json()\r\n\r\n      if (request.ok)\r\n      {\r\n        setFormMessage(res.message)\r\n      } else\r\n      {\r\n        setFormMessage(res.error)\r\n      }\r\n    }\r\n    sendRequest()\r\n\r\n\r\n  };\r\n  return <div className=\"new-room\">\r\n    <Sidebar></Sidebar>\r\n    <div className=\"new-room_content\">\r\n      <h2>Add New Room</h2>\r\n      <form className=\"new-room_form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-content\">\r\n          <div className=\"form-items\">\r\n            <label>Title</label>\r\n            <input type=\"text\" placeholder=\"The best room\" value={title} onChange={(e) => setTitle(e.target.value)} required></input>\r\n            <label>Price</label>\r\n            <input type=\"text\" placeholder=\"100\" value={price} onChange={(e) => setPrice(e.target.value)} required></input>\r\n          </div>\r\n          <div className=\"form-items\">\r\n            <label>Description</label>\r\n            <input type=\"text\" placeholder=\"description\" value={description} onChange={(e) => setDescription(e.target.value)} required></input>\r\n            <label>Max People</label>\r\n            <input type=\"Number\" placeholder=\"2\" value={maxPeople} onChange={(e) => setMaxPeople(e.target.value)} required></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"rooms\">\r\n          <div>\r\n            <p>Rooms</p>\r\n            <textarea value={rooms} onChange={(e) => setRooms(e.target.value)} type=\"text\" placeholder=\"give comma between room numbers.\"></textarea>\r\n          </div>\r\n          <div>\r\n            <p>Choose a hotel</p>\r\n            <select value={selectedHotel} onChange={(e) => setSelectedHotel(e.target.value)} required>\r\n              <option value=\"\">Select Hotel</option>\r\n              {hotel ? hotel.map((hotelName, index) =>\r\n              {\r\n                return <option key={index} value={hotelName}>{hotelName}</option>\r\n              }) : ''}\r\n\r\n            </select>\r\n          </div>\r\n          <button type=\"submit\">Send</button>\r\n        </div>\r\n        {formMessage && <p className=\"form-error\">{formMessage}</p>}\r\n      </form>\r\n    </div>\r\n  </div >\r\n}\r\nexport default Newroom"]},"metadata":{},"sourceType":"module"}