{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\NodeJS\\\\asm2\\\\Client App\\\\src\\\\pages\\\\home\\\\component\\\\Content\\\\Type.js\";\nimport \"./Type.css\";\nimport dataType from \"../../../../data/type.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Type = _ref => {\n  let {\n    data\n  } = _ref;\n  const propertyType = {};\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n\n  [\"Hotels\", \"Apartments\", \"Resorts\", \"Villas\", \"Cabins\"].forEach(type => {\n    propertyType[type] = {\n      count: 0,\n      image: \"\"\n    };\n  });\n  data.forEach(item => {\n    const type = item.type.charAt(0).toUpperCase() + item.type.slice(1);\n\n    if (propertyType[type]) {\n      propertyType[type].count++;\n    } else {\n      propertyType[type] = {\n        count: 1,\n        image: ''\n      };\n    }\n  });\n  dataType.forEach(item => {\n    const type = item.name;\n\n    if (propertyType[type]) {\n      propertyType[type].image = item.image;\n    }\n  });\n  console.log(propertyType);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Browse by property type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"type\",\n      children: Object.keys(propertyType).map((type, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-type\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: propertyType[type].image,\n            alt: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [propertyType[type].count, \" \", type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Type;\nexport default Type;\n\nvar _c;\n\n$RefreshReg$(_c, \"Type\");","map":{"version":3,"sources":["E:/Học Tập/NodeJS/asm2/Client App/src/pages/home/component/Content/Type.js"],"names":["dataType","Type","data","propertyType","forEach","type","count","image","item","charAt","toUpperCase","slice","name","console","log","Object","keys","map","index"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,QAAP,MAAqB,4BAArB;;;AACA,MAAMC,IAAI,GAAG,QACb;AAAA,MADc;AAAEC,IAAAA;AAAF,GACd;AACE,QAAMC,YAAY,GAAG,EAArB;;AACA,MAAI,CAACD,IAAL,EACA;AACE,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,GAAC,QAAD,EAAW,YAAX,EAAyB,SAAzB,EAAoC,QAApC,EAA8C,QAA9C,EAAwDE,OAAxD,CAAgEC,IAAI,IACpE;AACEF,IAAAA,YAAY,CAACE,IAAD,CAAZ,GAAqB;AACnBC,MAAAA,KAAK,EAAE,CADY;AAEnBC,MAAAA,KAAK,EAAE;AAFY,KAArB;AAID,GAND;AAQAL,EAAAA,IAAI,CAACE,OAAL,CAAaI,IAAI,IACjB;AACE,UAAMH,IAAI,GAAGG,IAAI,CAACH,IAAL,CAAUI,MAAV,CAAiB,CAAjB,EAAoBC,WAApB,KAAoCF,IAAI,CAACH,IAAL,CAAUM,KAAV,CAAgB,CAAhB,CAAjD;;AAEA,QAAIR,YAAY,CAACE,IAAD,CAAhB,EACA;AACEF,MAAAA,YAAY,CAACE,IAAD,CAAZ,CAAmBC,KAAnB;AACD,KAHD,MAIA;AACEH,MAAAA,YAAY,CAACE,IAAD,CAAZ,GAAqB;AAAEC,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,KAAK,EAAE;AAAnB,OAArB;AACD;AACF,GAXD;AAYAP,EAAAA,QAAQ,CAACI,OAAT,CAAkBI,IAAD,IACjB;AACE,UAAMH,IAAI,GAAGG,IAAI,CAACI,IAAlB;;AACA,QAAIT,YAAY,CAACE,IAAD,CAAhB,EACA;AACEF,MAAAA,YAAY,CAACE,IAAD,CAAZ,CAAmBE,KAAnB,GAA2BC,IAAI,CAACD,KAAhC;AACD;AACF,GAPD;AAQAM,EAAAA,OAAO,CAACC,GAAR,CAAYX,YAAZ;AACA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBACGY,MAAM,CAACC,IAAP,CAAYb,YAAZ,EAA0Bc,GAA1B,CAA8B,CAACZ,IAAD,EAAOa,KAAP,KAC/B;AACE,4BACE;AAAiB,UAAA,SAAS,EAAC,WAA3B;AAAA,kCACE;AAAK,YAAA,GAAG,EAAEf,YAAY,CAACE,IAAD,CAAZ,CAAmBE,KAA7B;AAAoC,YAAA,GAAG,EAAEF;AAAzC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,uBAAIF,YAAY,CAACE,IAAD,CAAZ,CAAmBC,KAAvB,OAA+BD,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,WAAUa,KAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OATA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CArDD;;KAAMjB,I;AAsDN,eAAeA,IAAf","sourcesContent":["import \"./Type.css\";\r\nimport dataType from \"../../../../data/type.json\";\r\nconst Type = ({ data }) =>\r\n{\r\n  const propertyType = {}\r\n  if (!data)\r\n  {\r\n    return <div>Loading...</div>;\r\n  }\r\n  [\"Hotels\", \"Apartments\", \"Resorts\", \"Villas\", \"Cabins\"].forEach(type =>\r\n  {\r\n    propertyType[type] = {\r\n      count: 0,\r\n      image: \"\"\r\n    }\r\n  });\r\n\r\n  data.forEach(item =>\r\n  {\r\n    const type = item.type.charAt(0).toUpperCase() + item.type.slice(1)\r\n\r\n    if (propertyType[type])\r\n    {\r\n      propertyType[type].count++\r\n    } else\r\n    {\r\n      propertyType[type] = { count: 1, image: '' }\r\n    }\r\n  })\r\n  dataType.forEach((item) =>\r\n  {\r\n    const type = item.name;\r\n    if (propertyType[type])\r\n    {\r\n      propertyType[type].image = item.image;\r\n    }\r\n  });\r\n  console.log(propertyType)\r\n  return (\r\n    <div>\r\n      <h2 className=\"title\">Browse by property type</h2>\r\n      <div className=\"type\">\r\n        {Object.keys(propertyType).map((type, index) =>\r\n        {\r\n          return (\r\n            <div key={index} className=\"card-type\">\r\n              <img src={propertyType[type].image} alt={type} />\r\n              <h3>{type}</h3>\r\n              <p>{propertyType[type].count} {type}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Type;\r\n"]},"metadata":{},"sourceType":"module"}