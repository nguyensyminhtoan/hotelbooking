{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\NodeJS\\\\asm2\\\\Client App\\\\src\\\\pages\\\\Transaction\\\\TransactionContent.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './TransactionContent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TransactionContent = _ref => {\n  _s();\n\n  let {\n    email\n  } = _ref;\n  const [dataTransaction, setDataTransaction] = useState([]);\n  const [error, setError] = useState(false);\n\n  const fetchData = async () => {\n    const request = await fetch('http://localhost:5000/your-transaction', {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email\n      })\n    });\n    const data = await request.json();\n    console.log(data);\n\n    if (request.ok) {\n      setDataTransaction(data);\n    }\n\n    {\n      setError(data.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"transaction-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Hotel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Payment Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: dataTransaction.map((transaction, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.hotel.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.room.join(', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.dateStart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.payment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"status-cell\",\n              children: transaction.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 14\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n\n_s(TransactionContent, \"SNwdrTy8dDLqdzBp2AybhPw3rr8=\");\n\n_c = TransactionContent;\nexport default TransactionContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionContent\");","map":{"version":3,"sources":["E:/Học Tập/NodeJS/asm2/Client App/src/pages/Transaction/TransactionContent.js"],"names":["useState","useEffect","TransactionContent","email","dataTransaction","setDataTransaction","error","setError","fetchData","request","fetch","method","headers","body","JSON","stringify","data","json","console","log","ok","message","map","transaction","index","hotel","name","room","join","dateStart","price","payment","status"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,0BAAP;;;AACA,MAAMC,kBAAkB,GAAG,QAC3B;AAAA;;AAAA,MAD4B;AAAEC,IAAAA;AAAF,GAC5B;AACE,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;;AACA,QAAMQ,SAAS,GAAG,YAClB;AACE,UAAMC,OAAO,GAAG,MAAMC,KAAK,CAAC,wCAAD,EAA2C;AACpEC,MAAAA,MAAM,EAAE,MAD4D;AAEpEC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAF2D;AAGpEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEZ,QAAAA,KAAK,EAAEA;AAAT,OAAf;AAH8D,KAA3C,CAA3B;AAKA,UAAMa,IAAI,GAAG,MAAMP,OAAO,CAACQ,IAAR,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,QAAIP,OAAO,CAACW,EAAZ,EACA;AACEf,MAAAA,kBAAkB,CAACW,IAAD,CAAlB;AACD;;AAAC;AAAET,MAAAA,QAAQ,CAACS,IAAI,CAACK,OAAN,CAAR;AAAwB;AAC7B,GAbD;;AAcApB,EAAAA,SAAS,CAAC,MACV;AACEO,IAAAA,SAAS;AACV,GAHQ,EAGN,EAHM,CAAT;AAIA,sBAAO;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,eAEL;AAAO,MAAA,SAAS,EAAC,mBAAjB;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAA,kBACGJ,eAAe,CAACkB,GAAhB,CAAoB,CAACC,WAAD,EAAcC,KAAd,KACrB;AACE,8BAAO;AAAA,oCACL;AAAA,wBAAKA,KAAK,GAAG;AAAb;AAAA;AAAA;AAAA;AAAA,oBADK,eAEL;AAAA,wBAAKD,WAAW,CAACE,KAAZ,CAAkBC;AAAvB;AAAA;AAAA;AAAA;AAAA,oBAFK,eAGL;AAAA,wBAAKH,WAAW,CAACI,IAAZ,CAAiBC,IAAjB,CAAsB,IAAtB;AAAL;AAAA;AAAA;AAAA;AAAA,oBAHK,eAIL;AAAA,wBAAKL,WAAW,CAACM;AAAjB;AAAA;AAAA;AAAA;AAAA,oBAJK,eAKL;AAAA,wBAAKN,WAAW,CAACO;AAAjB;AAAA;AAAA;AAAA;AAAA,oBALK,eAML;AAAA,wBAAKP,WAAW,CAACQ;AAAjB;AAAA;AAAA;AAAA;AAAA,oBANK,eAOL;AAAI,cAAA,SAAS,EAAC,aAAd;AAAA,wBAA6BR,WAAW,CAACS;AAAzC;AAAA;AAAA;AAAA;AAAA,oBAPK;AAAA,aAASR,KAAT;AAAA;AAAA;AAAA;AAAA,kBAAP;AASD,SAXA;AADH;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK,EA6BJlB,KAAK,gBAAG;AAAA,gBAAIA,KAAK,CAACe;AAAV;AAAA;AAAA;AAAA;AAAA,YAAH,GAA4B,EA7B7B;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AA+BD,CArDD;;GAAMnB,kB;;KAAAA,kB;AAsDN,eAAeA,kBAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport './TransactionContent.css'\r\nconst TransactionContent = ({ email }) =>\r\n{\r\n  const [dataTransaction, setDataTransaction] = useState([])\r\n  const [error, setError] = useState(false)\r\n  const fetchData = async () =>\r\n  {\r\n    const request = await fetch('http://localhost:5000/your-transaction', {\r\n      method: \"POST\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify({ email: email })\r\n    })\r\n    const data = await request.json()\r\n    console.log(data)\r\n    if (request.ok)\r\n    {\r\n      setDataTransaction(data)\r\n    } { setError(data.message) }\r\n  }\r\n  useEffect(() =>\r\n  {\r\n    fetchData();\r\n  }, []);\r\n  return <div className='transaction'>\r\n    <h2>Your Transaction</h2>\r\n    <table className=\"transaction-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Hotel</th>\r\n          <th>Room</th>\r\n          <th>Date</th>\r\n          <th>Price</th>\r\n          <th>Payment Method</th>\r\n          <th>Status</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {dataTransaction.map((transaction, index) =>\r\n        {\r\n          return <tr key={index}>\r\n            <td>{index + 1}</td>\r\n            <td>{transaction.hotel.name}</td>\r\n            <td>{transaction.room.join(', ')}</td>\r\n            <td>{transaction.dateStart}</td>\r\n            <td>{transaction.price}</td>\r\n            <td>{transaction.payment}</td>\r\n            <td className='status-cell'>{transaction.status}</td>\r\n          </tr>\r\n        })}\r\n      </tbody>\r\n    </table>\r\n    {error ? <p>{error.message}</p> : ''}\r\n  </div>\r\n}\r\nexport default TransactionContent"]},"metadata":{},"sourceType":"module"}