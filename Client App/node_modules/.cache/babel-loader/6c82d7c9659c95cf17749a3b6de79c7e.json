{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\NodeJS\\\\asm2\\\\Client App\\\\src\\\\pages\\\\detail\\\\FormBooking.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './FormBooking.css';\nimport { DateRange } from 'react-date-range';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormBooking = _ref => {\n  _s();\n\n  let {\n    dataUser,\n    dataHotels\n  } = _ref;\n  const navigate = useNavigate();\n  const [selectedDateRange, setSelectedDateRange] = useState({\n    startDate: new Date(),\n    endDate: new Date(),\n    key: \"selection\"\n  });\n  const [email, setEmail] = useState(dataUser.email || '');\n  const [fullName, setFullName] = useState(dataUser.fullName || '');\n  const [phoneNumber, setPhoneNumber] = useState(dataUser.phoneNumber || '');\n  const [cardNumber, setCardNumber] = useState(dataUser.cardNumber || '');\n  const [paymentMethod, setPaymentMethod] = useState('');\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const [numberOfDays, setNumberOfDays] = useState(1);\n  const [err, setErr] = useState(false);\n  const dataRooms = dataHotels.rooms; // Hàm xử lý sự kiện khi checkbox được thay đổi\n\n  const handleCheckboxChange = event => {\n    const roomNumber = Number(event.target.value);\n    const updatedSelectedRooms = [...selectedRooms];\n\n    if (event.target.checked) {\n      updatedSelectedRooms.push(roomNumber);\n    } else {\n      const index = updatedSelectedRooms.indexOf(roomNumber);\n\n      if (index !== -1) {\n        updatedSelectedRooms.splice(index, 1);\n      }\n    }\n\n    setSelectedRooms(updatedSelectedRooms);\n  };\n\n  const handlePaymentMethodChange = event => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleSelect = ranges => {\n    // Tính lại số ngày khi người dùng thay đổi phạm vi ngày\n    const startDate = ranges.selection.startDate;\n    const endDate = ranges.selection.endDate;\n    const millisecondsPerDay = 1000 * 60 * 60 * 24;\n    const days = Math.round((endDate.getTime() - startDate.getTime()) / millisecondsPerDay);\n    setNumberOfDays(days + 1);\n    setSelectedDateRange(ranges.selection);\n  };\n\n  console.log(dataRooms);\n\n  const sendDataBooking = async () => {\n    const selectedRoomsIds = []; // Lặp qua selectedRooms và tìm id của các phòng đã chọn\n\n    selectedRooms.forEach(selectedRoom => {\n      const foundRoom = dataRooms.find(room => room.roomNumbers.includes(selectedRoom));\n\n      if (foundRoom) {\n        selectedRoomsIds.push(foundRoom._id);\n      }\n    });\n    const request = await fetch('http://localhost:5000/transaction', {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: dataUser._id,\n        hotel: dataHotels._id,\n        room: selectedRooms,\n        roomsId: selectedRoomsIds,\n        dateStart: selectedDateRange.startDate,\n        dateEnd: selectedDateRange.endDate,\n        price: dataHotels.cheapestPrice * selectedRooms.length * numberOfDays,\n        payment: paymentMethod,\n        status: 'Booked'\n      })\n    });\n    const response = await request.json();\n\n    if (request.ok) {\n      setErr(false);\n      navigate('/transaction');\n    } else {\n      setErr(response);\n    }\n  };\n\n  const handleReserve = e => {\n    e.preventDefault();\n    sendDataBooking();\n  };\n\n  const handleFullName = e => {\n    setFullName(e.target.value);\n  };\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const handlePhoneNumber = e => {\n    setPhoneNumber(e.target.value);\n  };\n\n  const handleCardNumber = e => {\n    setCardNumber(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-booking\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-user\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Dates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DateRange, {\n          editableDateInputs: true,\n          moveRangeOnFirstSelection: false,\n          className: \"date\",\n          minDate: new Date(),\n          onChange: handleSelect,\n          ranges: [selectedDateRange]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Reserve Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Your Full Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Full Name\",\n          onChange: handleFullName,\n          value: fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Your Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          onChange: handleEmail,\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Your Phone Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Number\",\n          placeholder: \"Phone Number\",\n          onChange: handlePhoneNumber,\n          value: phoneNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Your Identity Card Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Number\",\n          placeholder: \"Card Number\",\n          onChange: handleCardNumber,\n          value: cardNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rooms\",\n        children: dataRooms.map((room, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rooms-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: room.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: room.desc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Max people: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: room.maxPeople\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [\"$\", dataHotels.cheapestPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 18\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rooms-number\",\n              children: room.roomNumbers.map((roomNumber, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: roomNumber,\n                    children: roomNumber\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: roomNumber,\n                    type: \"checkbox\",\n                    value: roomNumber,\n                    onChange: handleCheckboxChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 19\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 24\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 13\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bill\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Total Bill: $\", dataHotels.cheapestPrice * selectedRooms.length * numberOfDays]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            defaultValue: \"Select Payment Method\",\n            onChange: handlePaymentMethodChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Select Payment Method\",\n              disabled: true,\n              children: \"Select Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cash\",\n              children: \"Cash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"card\",\n              children: \"Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"credit card\",\n              children: \"Credit Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleReserve,\n            children: \"Reserve Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }, this), err ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: err.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 16\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 10\n  }, this);\n};\n\n_s(FormBooking, \"gukH5vKxy6V/uoksrSQmedBkPbk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = FormBooking;\nexport default FormBooking;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormBooking\");","map":{"version":3,"sources":["E:/Học Tập/NodeJS/asm2/Client App/src/pages/detail/FormBooking.js"],"names":["useState","DateRange","useNavigate","FormBooking","dataUser","dataHotels","navigate","selectedDateRange","setSelectedDateRange","startDate","Date","endDate","key","email","setEmail","fullName","setFullName","phoneNumber","setPhoneNumber","cardNumber","setCardNumber","paymentMethod","setPaymentMethod","selectedRooms","setSelectedRooms","numberOfDays","setNumberOfDays","err","setErr","dataRooms","rooms","handleCheckboxChange","event","roomNumber","Number","target","value","updatedSelectedRooms","checked","push","index","indexOf","splice","handlePaymentMethodChange","handleSelect","ranges","selection","millisecondsPerDay","days","Math","round","getTime","console","log","sendDataBooking","selectedRoomsIds","forEach","selectedRoom","foundRoom","find","room","roomNumbers","includes","_id","request","fetch","method","headers","body","JSON","stringify","user","hotel","roomsId","dateStart","dateEnd","price","cheapestPrice","length","payment","status","response","json","ok","handleReserve","e","preventDefault","handleFullName","handleEmail","handlePhoneNumber","handleCardNumber","map","title","desc","maxPeople","message"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport './FormBooking.css'\r\nimport { DateRange } from 'react-date-range'\r\nimport { useNavigate } from 'react-router-dom';\r\nconst FormBooking = ({ dataUser, dataHotels }) =>\r\n{\r\n  const navigate = useNavigate()\r\n  const [selectedDateRange, setSelectedDateRange] = useState({\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    key: \"selection\",\r\n  });\r\n  const [email, setEmail] = useState(dataUser.email || '')\r\n  const [fullName, setFullName] = useState(dataUser.fullName || '')\r\n  const [phoneNumber, setPhoneNumber] = useState(dataUser.phoneNumber || '')\r\n  const [cardNumber, setCardNumber] = useState(dataUser.cardNumber || '')\r\n  const [paymentMethod, setPaymentMethod] = useState('')\r\n  const [selectedRooms, setSelectedRooms] = useState([]);\r\n  const [numberOfDays, setNumberOfDays] = useState(1)\r\n  const [err, setErr] = useState(false)\r\n  const dataRooms = dataHotels.rooms\r\n  // Hàm xử lý sự kiện khi checkbox được thay đổi\r\n\r\n  const handleCheckboxChange = (event) =>\r\n  {\r\n    const roomNumber = Number(event.target.value);\r\n\r\n    const updatedSelectedRooms = [...selectedRooms];\r\n\r\n    if (event.target.checked)\r\n    {\r\n\r\n      updatedSelectedRooms.push(roomNumber);\r\n    } else\r\n    {\r\n\r\n      const index = updatedSelectedRooms.indexOf(roomNumber);\r\n      if (index !== -1)\r\n      {\r\n        updatedSelectedRooms.splice(index, 1);\r\n      }\r\n    }\r\n\r\n    setSelectedRooms(updatedSelectedRooms);\r\n\r\n  };\r\n  const handlePaymentMethodChange = (event) =>\r\n  {\r\n    setPaymentMethod(event.target.value);\r\n  };\r\n  const handleSelect = (ranges) =>\r\n  {\r\n    // Tính lại số ngày khi người dùng thay đổi phạm vi ngày\r\n    const startDate = ranges.selection.startDate;\r\n    const endDate = ranges.selection.endDate;\r\n    const millisecondsPerDay = 1000 * 60 * 60 * 24;\r\n    const days = Math.round((endDate.getTime() - startDate.getTime()) / millisecondsPerDay);\r\n    setNumberOfDays(days + 1);\r\n    setSelectedDateRange(ranges.selection);\r\n  };\r\n  console.log(dataRooms)\r\n  const sendDataBooking = async () =>\r\n  {\r\n    const selectedRoomsIds = [];\r\n\r\n    // Lặp qua selectedRooms và tìm id của các phòng đã chọn\r\n    selectedRooms.forEach((selectedRoom) =>\r\n    {\r\n      const foundRoom = dataRooms.find((room) => room.roomNumbers.includes(selectedRoom));\r\n      if (foundRoom)\r\n      {\r\n        selectedRoomsIds.push(foundRoom._id);\r\n      }\r\n    });\r\n\r\n    const request = await fetch('http://localhost:5000/transaction', {\r\n      method: \"POST\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user: dataUser._id,\r\n        hotel: dataHotels._id,\r\n        room: selectedRooms,\r\n        roomsId: selectedRoomsIds,\r\n        dateStart: selectedDateRange.startDate,\r\n        dateEnd: selectedDateRange.endDate,\r\n        price: dataHotels.cheapestPrice * selectedRooms.length * numberOfDays,\r\n        payment: paymentMethod,\r\n        status: 'Booked'\r\n      })\r\n    })\r\n\r\n    const response = await request.json()\r\n    if (request.ok)\r\n    {\r\n      setErr(false)\r\n      navigate('/transaction')\r\n    } else\r\n    {\r\n      setErr(response)\r\n    }\r\n  }\r\n\r\n  const handleReserve = (e) =>\r\n  {\r\n    e.preventDefault()\r\n    sendDataBooking()\r\n  }\r\n  const handleFullName = (e) => { setFullName(e.target.value) }\r\n  const handleEmail = (e) => { setEmail(e.target.value) }\r\n  const handlePhoneNumber = (e) => { setPhoneNumber(e.target.value) }\r\n  const handleCardNumber = (e) => { setCardNumber(e.target.value) }\r\n\r\n\r\n  return <div className='form-booking'>\r\n    <div className='form-user'>\r\n      <div>\r\n        <h3>Dates</h3>\r\n        <DateRange\r\n          editableDateInputs={true}\r\n          moveRangeOnFirstSelection={false}\r\n          className=\"date\"\r\n          minDate={new Date()}\r\n          onChange={handleSelect}\r\n          ranges={[selectedDateRange]}\r\n        />\r\n      </div>\r\n      <div className='user-info'>\r\n        <h3>Reserve Info</h3>\r\n        <label>Your Full Name:</label>\r\n        <input type='text' placeholder='Full Name' onChange={handleFullName} value={fullName}></input>\r\n        <label>Your Email:</label>\r\n        <input type='email' placeholder='Email' onChange={handleEmail} value={email}></input>\r\n        <label>Your Phone Number:</label>\r\n        <input type='Number' placeholder='Phone Number' onChange={handlePhoneNumber} value={phoneNumber}></input>\r\n        <label >Your Identity Card Number</label>\r\n        <input type='Number' placeholder='Card Number' onChange={handleCardNumber} value={cardNumber}></input>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <h3>Select Rooms</h3>\r\n      <div className='rooms'>\r\n        {dataRooms.map((room, index) =>\r\n        {\r\n          return <div key={index} className='rooms-item'>\r\n            <div>\r\n              <h4>{room.title}</h4>\r\n              <p>{room.desc}</p>\r\n              <p>Max people: <b>{room.maxPeople}</b></p>\r\n              <p><b>${dataHotels.cheapestPrice}</b></p>\r\n            </div>\r\n            <div className='rooms-number'>\r\n              {room.roomNumbers.map((roomNumber, index) =>\r\n              {\r\n                return <div key={index}>\r\n                  <label htmlFor={roomNumber}>{roomNumber}</label>\r\n                  <input id={roomNumber}\r\n                    type='checkbox'\r\n                    value={roomNumber}\r\n                    onChange={handleCheckboxChange}>\r\n                  </input>\r\n                </div>\r\n              })}\r\n            </div>\r\n          </div>\r\n        })}\r\n      </div>\r\n      <div className='bill'>\r\n        <h3>Total Bill: ${dataHotels.cheapestPrice * selectedRooms.length * numberOfDays}</h3>\r\n        <div className='payment'>\r\n          <select defaultValue='Select Payment Method' onChange={handlePaymentMethodChange}>\r\n            <option value='Select Payment Method' disabled>Select Payment Method</option>\r\n            <option value='cash'>Cash</option>\r\n            <option value='card'>Card</option>\r\n            <option value='credit card'>Credit Card</option>\r\n          </select>\r\n          <button className='button' onClick={handleReserve}>Reserve Now</button>\r\n        </div>\r\n        {err ? <p>{err.message}</p> : ''}\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\nexport default FormBooking"]},"metadata":{},"sourceType":"module"}